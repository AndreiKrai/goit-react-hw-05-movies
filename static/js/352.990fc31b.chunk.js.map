{"version":3,"file":"static/js/352.990fc31b.chunk.js","mappings":"sUACMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFhB,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,qDAOdC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,oBACoBN,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAOdI,EAAQ,mCAAG,WAAMD,GAAN,yFACCJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BAC4BN,IAF7B,uBACdG,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAORK,EAAU,mCAAG,WAAMF,GAAN,yFACDJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BAC4BN,IAF3B,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVM,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAAAA,GAAAA,IAAA,UAClBH,EADkB,+BACaW,EADb,2BAC0CV,IAFrC,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdO,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAAAA,GAAAA,IAAA,UAClBH,EADkB,mBACCa,EADD,oBACsBZ,IAFnB,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,qD,wJClCV,SAASU,IACtB,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GADSC,EAAAA,EAAAA,MACQD,QACjBE,GAASC,EAAAA,EAAAA,MAWf,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBd,EAAAA,EAAAA,IAASU,GAD9B,OACQd,EADR,OAEEa,EAASb,GAFX,4CADc,uBAAC,WAAD,wBAKdmB,EACD,GAAE,CAACL,IAGFF,GAAUA,EAAMQ,KAAKC,KAAI,gBAAEC,EAAF,EAAEA,UAAUC,EAAZ,EAAYA,KAAKC,EAAjB,EAAiBA,aAAaC,EAA9B,EAA8BA,GAA9B,OAAoC,iBAAcC,UAAU,2BAAxB,WACzD,gBAAKC,IAAG,yCAAoCH,GAAgBE,UAAU,qBAAqBE,IAAG,UAAKL,MACnG,iBAAKG,UAAU,YAAf,WACE,cAAGA,UAAU,YAAb,wBAAkCH,MAClC,cAAGG,UAAU,YAAb,6BAAuCJ,MACtC,SAAC,KAAD,CAAMO,GAAE,iBAAYJ,GAAMC,UAAU,kBAAkBI,MAAO,CAACC,KAAKf,GAAnE,+BALgES,EAA9C,GAc5B,C","sources":["helpers/api.js","pages/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '08cfb1cba341ef968995af439d190569';\n\nexport const getDataFromAPI = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const getSingleMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\nexport const getCasts = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByName = async movie_name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${movie_name}&page=1&api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const getActorById = async actots_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/person/${actots_id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import { getCasts } from 'helpers/api';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nexport default function Casts() {\n  const [casts, setCasts] = useState();\n  const params = useParams();\n  const movieId = params.movieId;\n  const location=useLocation();\n\n\n  useEffect(() => {\n    async function getCastsApi() {\n      const data = await getCasts(movieId);\n      setCasts(data);\n    }\n    getCastsApi();\n  }, [movieId]);\n\n  return (\n    casts && (casts.cast.map(({character,name,profile_path,id})=><div key={id} className=\"card d-flex flex-row p-2\">\n        <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} className=\"card-img-top w-25 \" alt={`${name}`} />\n        <div className=\"card-body\">\n          <p className=\"card-text\">{`Name ${name}`}</p>\n          <p className=\"card-text\">{`Character ${character}`}</p>\n          {<Link to={`/actor/${id}`} className=\"btn btn-primary\" state={{from:location}}>\n                Find more...\n              </Link>}\n        </div>\n        \n      </div>)\n      \n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","getDataFromAPI","axios","data","results","getSingleMovie","movie_id","getCasts","getReviews","getMovieByName","movie_name","getActorById","actots_id","Casts","useState","casts","setCasts","movieId","useParams","location","useLocation","useEffect","getCastsApi","cast","map","character","name","profile_path","id","className","src","alt","to","state","from"],"sourceRoot":""}