{"version":3,"file":"static/js/765.0ef72fae.chunk.js","mappings":"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","sources":["components/SingleMoviePage.jsx","helpers/api.js"],"sourcesContent":["import { getSingleMovie } from 'helpers/api';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\n\nexport default function SingleMoviePage() {\n  const params = useParams();\n  const movieId = params.movieId;\n\n  const [movie, setMovie] = useState(null);\n  const [isLoadind, setIsLoadind] = useState(true);\n  const location = useLocation();\n  useEffect(() => {\n    async function getSingleMovieApi() {\n      const data = await getSingleMovie(movieId);\n      setMovie(data);\n      setIsLoadind(false);\n    }\n    getSingleMovieApi();\n  }, [movieId]);\n\n  if (isLoadind) {\n    return <p>Is loading</p>;\n  }\n  const genresList = movie.genres.map(genre => genre.name);\n\n  const { title, poster_path, id, overview, vote_average } = movie;\n\n  return (\n    <div>\n      {movie && (\n        <>\n          <div className=\"card d-flex flex-row p-2\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              className=\"card-img-top w-25\"\n              alt={`${title}`}\n            />\n\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">{`${title}`}</h2>\n              <p className=\"card-text\">{`User Score ${vote_average}`}</p>\n              <h3 className=\"card-title\">Overview</h3>\n              <p className=\"card-text\">{`${overview}`}</p>\n              <h3 className=\"card-title\">Genres</h3>\n              <p className=\"card-text\">{`${genresList}`}</p>\n\n              <Link to={`${location.state?.from?.pathname}${location.state?.from?.search}`} className=\"btn btn-primary\">\n                Go back\n              </Link>\n            </div>\n          </div>\n          <h3>Aditional information</h3>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <Link\n                state={location.state}\n                // тут зберігаємо те що передали в movieListItem\n                key={id}\n                to={`casts`}\n                className=\"list-group-item list-group-item-action \"\n                aria-current=\"true\"\n              >\n                Cast\n              </Link>\n            </li>\n            <li className=\"list-group-item\">\n              <Link\n                state={location.state}\n                key={id}\n                to={`reviews`}\n                className=\"list-group-item list-group-item-action \"\n                aria-current=\"true\"\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '08cfb1cba341ef968995af439d190569';\n\nexport const getDataFromAPI = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const getSingleMovie = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\nexport const getCasts = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByName = async movie_name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${movie_name}&page=1&api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const getActorById = async actots_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/person/${actots_id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["SingleMoviePage","movieId","useParams","useState","movie","setMovie","isLoadind","setIsLoadind","location","useLocation","useEffect","getSingleMovie","data","getSingleMovieApi","genresList","genres","map","genre","name","title","poster_path","id","overview","vote_average","className","src","alt","to","state","from","pathname","search","BASE_URL","API_KEY","getDataFromAPI","axios","results","movie_id","getCasts","getReviews","getMovieByName","movie_name","getActorById","actots_id"],"sourceRoot":""}